# vim: set ts=2 sw=2 ft=nginx :

error_log /dev/stderr warn;
pid /var/run/nginx.pid;
pcre_jit on;
worker_processes auto;
worker_rlimit_nofile 4096;

events {
  worker_connections 2048;
  multi_accept on;
}

http {
  server_tokens off;
  postpone_output 0;
  sendfile on;
  tcp_nopush on;
  aio on;
  directio 1m;

  include /etc/nginx/mime.types;

  default_type text/plain;

  gzip on;
  gzip_vary on;
  gzip_min_length 100;
  gzip_comp_level 6;
  gzip_http_version 1.1;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain text/css text/xml text/javascript
    application/json application/x-javascript application/javascript
    application/xml application/xml+rss application/xhtml+xml application/rss+xml;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /dev/stdout main;

  # If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
  # scheme used to connect to this server
  map $http_x_forwarded_proto $proxy_x_forwarded_proto {
    default $http_x_forwarded_proto;
    '' $scheme;
  }

  # If we receive X-Forwarded-Port, pass it through; otherwise, pass along the
  # server port the client connected to
  map $http_x_forwarded_port $proxy_x_forwarded_port {
    default $http_x_forwarded_port;
    '' $server_port;
  }

  # If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
  # Connection header that may have been passed to this server
  map $http_upgrade $proxy_connection {
    default upgrade;
    '' close;
  }

  # Apply fix for very long server names
  server_names_hash_bucket_size 128;

  # Set appropriate X-Forwarded-Ssl header
  map $scheme $proxy_x_forwarded_ssl {
    default off;
    https on;
  }

  real_ip_header X-Forwarded-For;

  # HTTP 1.1 support
  proxy_http_version 1.1;
  proxy_buffering off;
  proxy_set_header Host $http_host;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection $proxy_connection;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
  proxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;
  proxy_set_header X-Forwarded-Port $proxy_x_forwarded_port;
  proxy_set_header X-Nginx-Proxy true;

  # mitigate httpoxy attack
  proxy_set_header Proxy "";

  # Defines a timeout for reading client request body. The timeout is set only for a period between two successive
  # read operations, not for the transmission of the whole request body. If a client does not transmit anything within
  # this time, the 408 (Request Time-out) error is returned to the client.
  client_body_timeout 2s;

  # Defines a timeout for reading client request header. If a client does not transmit the entire header within
  # this time, the 408 (Request Time-out) error is returned to the client.
  client_header_timeout 2s;

  # The first parameter sets a timeout during which a keep-alive client connection will stay open on the server side.
  # The zero value disables keep-alive client connections. The optional second parameter sets a value in the
  # “Keep-Alive: timeout=time” response header field. Two parameters may differ.
  #
  # The “Keep-Alive: timeout=time” header field is recognized by Mozilla and Konqueror. MSIE closes keep-alive
  # connections by itself in about 60 seconds.
  keepalive_timeout 30s;

  # Sets a timeout for transmitting a response to the client. The timeout is set only between two successive write
  # operations, not for the transmission of the whole response. If the client does not receive anything within this
  # time, the connection is closed.
  send_timeout 2s;

  # Sets a timeout for name resolution.
  resolver_timeout 1s;

  server {
    listen 8080 default_server;
    listen [::]:8080 default_server;

    server_name _;

    root /var/www/html;

    absolute_redirect off;

    add_header X-Storybook-Container-Nginx $hostname always;

    location = / {
        index index.html;
    }

    location / {
      try_files $uri =404;
    }

    location /generator {
      # Defines a timeout for establishing a connection with a proxied server. It should be noted that this
      # timeout cannot usually exceed 75 seconds.
      #   Default: 60s
      proxy_connect_timeout 2s;

      # Sets a timeout for transmitting a request to the proxied server. The timeout is set only between two
      # successive write operations, not for the transmission of the whole request. If the proxied server does
      # not receive anything within this time, the connection is closed.
      #   Default: 60s
      proxy_send_timeout 2s;

      # Defines a timeout for reading a response from the proxied server. The timeout is set only between two
      # successive read operations, not for the transmission of the whole response. If the proxied server does
      # not transmit anything within this time, the connection is closed.
      #   Default: 60s
      proxy_read_timeout 6s;

      proxy_pass http://{PROXY_PASS};
    }
  }
}
